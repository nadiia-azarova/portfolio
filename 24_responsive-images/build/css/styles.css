html,
body,
body div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
figure,
footer,
header,
menu,
nav,
section,
time,
mark,
audio,
video,
details,
summary {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font-weight: normal;
  vertical-align: baseline;
  background: transparent;
}

article,
aside,
figure,
footer,
header,
main,
nav,
section,
details,
summary {
  display: block;
}

html {
  overflow-y: scroll;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

img,
object,
embed {
  max-width: 100%;
  border-style: none;
}

#map img {
  max-width: none;
}

ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background-color: transparent;
}

del {
  text-decoration: line-through;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

abbr[title],
dfn[title] {
  border-bottom: 1px dotted #000;
  cursor: help;
}

hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  white-space: pre-line;
  word-wrap: break-word;
}

b,
strong {
  font-weight: bolder;
}

table {
  font-size: inherit;
  font: 100%;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

pre,
code,
kbd,
samp {
  font-family: monospace, sans-serif;
  font-size: 1em;
}

input[type=button],
input[type=submit],
input[type=file],
button {
  cursor: pointer;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button,
input[type=button] {
  width: auto;
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

[type=checkbox],
[type=radio] {
  padding: 0;
}

[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

details {
  display: block;
}

summary {
  display: list-item;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

@font-face {
  font-family: Lato;
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/lato-v20-latin-regular.woff2") format("woff2"), url("../fonts/lato-v20-latin-regular.woff") format("woff");
}
@font-face {
  font-family: "Red Hat Display";
  font-style: normal;
  font-weight: 400;
  src: local(""), url("../fonts/red-hat-display-v7-latin-regular.woff2") format("woff2"), url("../fonts/red-hat-display-v7-latin-regular.woff") format("woff");
}
.page {
  font-family: Lato, "Myriad Pro", Seravek, Ember, "Trebuchet MS", "BN Trebuchet MS", "PT Sans", "Frutiger Neue", Roboto, sans-serif;
  font-size: 19px;
  font-weight: 400;
  line-height: 32px;
  letter-spacing: 0.01em;
  color: #565656;
}

.container {
  max-width: 1120px;
  margin: 0 auto;
  padding: 0 16px;
}

.header {
  padding: 48px 0;
}

.section,
.hero-section {
  padding: 64px 0;
}

.head-a,
.head-b {
  font-family: "Red Hat Display", "Myriad Pro", Seravek, Ember, "Trebuchet MS", "BN Trebuchet MS", "PT Sans", "Frutiger Neue", Roboto, sans-serif;
  color: #000000;
}

.head-a {
  font-size: 48px;
  line-height: 64px;
  letter-spacing: 0.005em;
}

.head-b {
  font-size: 24px;
  line-height: 64px;
  letter-spacing: 0.005em;
}

.hero-section__head-a {
  margin-bottom: 64px;
}

.section__head-b {
  margin-bottom: 40px;
}

.header__txt {
  font-size: 16px;
  line-height: 1.5;
  letter-spacing: 0.05em;
  color: #000000;
}

.section__body-txt:not(:last-of-type) {
  margin-bottom: 32px;
}

.txt-wrap {
  max-width: 496px;
}

.section__pic,
.hero-section__pic {
  margin-bottom: 48px;
}

.section__img,
.hero-section__img {
  width: 100%;
}

@media screen and (max-width: 768px) {
  .section,
.hero-section {
    padding: 32px 0;
  }

  .head-a {
    font-size: 33px;
    line-height: 50px;
  }

  .hero-section__head-a {
    margin-bottom: 52px;
  }
}
@media screen and (max-width: 576px) {
  .section,
.hero-section {
    padding: 24px 0;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
